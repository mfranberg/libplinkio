INCLUDE (CheckIncludeFiles)
set(CMAKE_INCLUDE_CURRENT_DIR ON)

include_directories( "." )
include_directories( ${LIBCSV_INCLUDE_DIR} )

file( GLOB_RECURSE SRC_LIST "*.c" )
file( GLOB_RECURSE HEADERS "plinkio/*.h" "private/*.h" "*.h")
list( APPEND HEADERS ${AG_HEADERS} )

if( NOT DISABLE_SHARED_LIBRARY )
    add_library( libplinkio SHARED ${SRC_LIST} )
    if(CMAKE_GENERATOR MATCHES "Visual Studio")
        target_compile_options( libplinkio PRIVATE /Wall /WX /D_CRT_SECURE_NO_WARNINGS /wd4996 /wd5045 /wd4820 /wd4668 /wd4710 /wd4711)
    else()
        target_compile_options( libplinkio PRIVATE -Wall -Wextra -Werror )
    endif()
    SET_TARGET_PROPERTIES( libplinkio PROPERTIES OUTPUT_NAME plinkio )
    if(WIN32)
        target_link_libraries( libplinkio bcrypt)
    endif()
    install( TARGETS libplinkio DESTINATION lib )
endif( )

if( NOT DISABLE_STATIC_LIBRARY )
    add_library( libplinkio-static STATIC ${SRC_LIST} )
    if(CMAKE_GENERATOR MATCHES "Visual Studio")
        target_compile_options( libplinkio-static PRIVATE /Wall /WX /D_CRT_SECURE_NO_WARNINGS /wd4996 /wd5045 /wd4820 /wd4668 /wd4710 /wd4711)
    else()
        target_compile_options( libplinkio-static PRIVATE -Wall -Wextra -Werror )
    endif()
    if(WIN32)
       target_link_libraries( libplinkio-static bcrypt )
    endif()
    SET_TARGET_PROPERTIES( libplinkio-static PROPERTIES OUTPUT_NAME plinkio )
endif( )

if( NOT DISABLE_INSTALL_HEADERS )
    install( FILES ${HEADERS} DESTINATION include/plinkio )
endif( )
