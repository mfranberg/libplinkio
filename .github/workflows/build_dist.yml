name: Build sdist and wheel

on:
  workflow_dispatch:
  workflow_call:

jobs:
  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
      
      - name: Generate sdist
        run: python setup.py sdist
      
      - name: Save sdist
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/*.tar.gz
  
  wheel:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
        include:
          - python-version: "3.7"
            python-identifier: "cp37-*"
          - python-version: "3.8"
            python-identifier: "cp38-*"
          - python-version: "3.9"
            python-identifier: "cp39-*"
          - python-version: "3.10"
            python-identifier: "cp310-*"
          - python-version: "3.11"
            python-identifier: "cp311-*"
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
        if: runner.os == 'Linux'
      
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.0
        env:
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: "pytest {project}/py-plinkio/tests"
          CIBW_TEST_SKIP: "*-macosx_arm64 *-macosx_universal2:arm64"
          CIBW_BUILD: "${{ matrix.python-identifier }}"
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_ARCHS_LINUX: "x86_64 aarch64"
          CIBW_ARCHS_WINDOWS: "AMD64 x86"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2010
          CIBW_MANYLINUX_AARCH64_IMAGE: manylinux2014
          CIBW_MUSLLINUX_X86_64_IMAGE: musllinux_1_1
          CIBW_MUSLLINUX_AARCH64_IMAGE: musllinux_1_1
      
      - name: Save wheel
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: "./wheelhouse/*.whl"
  
  twine-check:
    needs: [sdist, wheel]
    runs-on: ubuntu-latest
    steps:
      - name: Load dist
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install twine
      
      - name: Twine check
        run: |
          twine check dist/*
